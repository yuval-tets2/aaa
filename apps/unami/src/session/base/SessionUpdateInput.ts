/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { SessionDatumUpdateManyWithoutSessionsInput } from "./SessionDatumUpdateManyWithoutSessionsInput";
import { Type } from "class-transformer";
import { WebsiteEventUpdateManyWithoutSessionsInput } from "./WebsiteEventUpdateManyWithoutSessionsInput";

@InputType()
class SessionUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  browser?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  device?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hostname?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  language?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  os?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  screen?: string | null;

  @ApiProperty({
    required: false,
    type: () => SessionDatumUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => SessionDatumUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => SessionDatumUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  sessionData?: SessionDatumUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subdivision1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subdivision2?: string | null;

  @ApiProperty({
    required: false,
    type: () => WebsiteEventUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => WebsiteEventUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => WebsiteEventUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  websiteEvent?: WebsiteEventUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  websiteId?: string;
}

export { SessionUpdateInput as SessionUpdateInput };
