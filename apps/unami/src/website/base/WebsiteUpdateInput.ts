/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsOptional, IsString, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { EventDatumUpdateManyWithoutWebsitesInput } from "./EventDatumUpdateManyWithoutWebsitesInput";
import { ReportUpdateManyWithoutWebsitesInput } from "./ReportUpdateManyWithoutWebsitesInput";
import { SessionDatumUpdateManyWithoutWebsitesInput } from "./SessionDatumUpdateManyWithoutWebsitesInput";
import { TeamWebsiteUpdateManyWithoutWebsitesInput } from "./TeamWebsiteUpdateManyWithoutWebsitesInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class WebsiteUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deletedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  domain?: string | null;

  @ApiProperty({
    required: false,
    type: () => EventDatumUpdateManyWithoutWebsitesInput,
  })
  @ValidateNested()
  @Type(() => EventDatumUpdateManyWithoutWebsitesInput)
  @IsOptional()
  @Field(() => EventDatumUpdateManyWithoutWebsitesInput, {
    nullable: true,
  })
  eventData?: EventDatumUpdateManyWithoutWebsitesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => ReportUpdateManyWithoutWebsitesInput,
  })
  @ValidateNested()
  @Type(() => ReportUpdateManyWithoutWebsitesInput)
  @IsOptional()
  @Field(() => ReportUpdateManyWithoutWebsitesInput, {
    nullable: true,
  })
  report?: ReportUpdateManyWithoutWebsitesInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  resetAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => SessionDatumUpdateManyWithoutWebsitesInput,
  })
  @ValidateNested()
  @Type(() => SessionDatumUpdateManyWithoutWebsitesInput)
  @IsOptional()
  @Field(() => SessionDatumUpdateManyWithoutWebsitesInput, {
    nullable: true,
  })
  sessionData?: SessionDatumUpdateManyWithoutWebsitesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shareId?: string | null;

  @ApiProperty({
    required: false,
    type: () => TeamWebsiteUpdateManyWithoutWebsitesInput,
  })
  @ValidateNested()
  @Type(() => TeamWebsiteUpdateManyWithoutWebsitesInput)
  @IsOptional()
  @Field(() => TeamWebsiteUpdateManyWithoutWebsitesInput, {
    nullable: true,
  })
  teamWebsite?: TeamWebsiteUpdateManyWithoutWebsitesInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { WebsiteUpdateInput as WebsiteUpdateInput };
