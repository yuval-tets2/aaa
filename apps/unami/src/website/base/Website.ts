/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsOptional, IsString, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { EventDatum } from "../../eventDatum/base/EventDatum";
import { Report } from "../../report/base/Report";
import { SessionDatum } from "../../sessionDatum/base/SessionDatum";
import { TeamWebsite } from "../../teamWebsite/base/TeamWebsite";
import { User } from "../../user/base/User";

@ObjectType()
class Website {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deletedAt!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  domain!: string | null;

  @ApiProperty({
    required: false,
    type: () => [EventDatum],
  })
  @ValidateNested()
  @Type(() => EventDatum)
  @IsOptional()
  eventData?: Array<EventDatum>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => [Report],
  })
  @ValidateNested()
  @Type(() => Report)
  @IsOptional()
  report?: Array<Report>;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  resetAt!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [SessionDatum],
  })
  @ValidateNested()
  @Type(() => SessionDatum)
  @IsOptional()
  sessionData?: Array<SessionDatum>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shareId!: string | null;

  @ApiProperty({
    required: false,
    type: () => [TeamWebsite],
  })
  @ValidateNested()
  @Type(() => TeamWebsite)
  @IsOptional()
  teamWebsite?: Array<TeamWebsite>;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt!: Date | null;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;
}

export { Website as Website };
