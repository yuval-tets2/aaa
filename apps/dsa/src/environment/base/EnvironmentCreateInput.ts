/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApiKeyCreateNestedManyWithoutEnvironmentsInput } from "./ApiKeyCreateNestedManyWithoutEnvironmentsInput";
import { ValidateNested, IsOptional, IsEnum, IsBoolean } from "class-validator";
import { Type } from "class-transformer";
import { AttributeClassCreateNestedManyWithoutEnvironmentsInput } from "./AttributeClassCreateNestedManyWithoutEnvironmentsInput";
import { EventClassCreateNestedManyWithoutEnvironmentsInput } from "./EventClassCreateNestedManyWithoutEnvironmentsInput";
import { PersonCreateNestedManyWithoutEnvironmentsInput } from "./PersonCreateNestedManyWithoutEnvironmentsInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { SurveyCreateNestedManyWithoutEnvironmentsInput } from "./SurveyCreateNestedManyWithoutEnvironmentsInput";
import { TagCreateNestedManyWithoutEnvironmentsInput } from "./TagCreateNestedManyWithoutEnvironmentsInput";
import { EnumEnvironmentType } from "./EnumEnvironmentType";
import { WebhookCreateNestedManyWithoutEnvironmentsInput } from "./WebhookCreateNestedManyWithoutEnvironmentsInput";

@InputType()
class EnvironmentCreateInput {
  @ApiProperty({
    required: false,
    type: () => ApiKeyCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => ApiKeyCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => ApiKeyCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  apiKeys?: ApiKeyCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => AttributeClassCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => AttributeClassCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => AttributeClassCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  attributeClasses?: AttributeClassCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => EventClassCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => EventClassCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => EventClassCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  eventClasses?: EventClassCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => PersonCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => PersonCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => PersonCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  people?: PersonCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: true,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @Field(() => ProductWhereUniqueInput)
  product!: ProductWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SurveyCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => SurveyCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => SurveyCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  surveys?: SurveyCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => TagCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => TagCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => TagCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  tags?: TagCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: true,
    enum: EnumEnvironmentType,
  })
  @IsEnum(EnumEnvironmentType)
  @Field(() => EnumEnvironmentType)
  type!: "production" | "development";

  @ApiProperty({
    required: false,
    type: () => WebhookCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => WebhookCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => WebhookCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  webhooks?: WebhookCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  widgetSetupCompleted!: boolean;
}

export { EnvironmentCreateInput as EnvironmentCreateInput };
