/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApiKeyUpdateManyWithoutEnvironmentsInput } from "./ApiKeyUpdateManyWithoutEnvironmentsInput";
import { ValidateNested, IsOptional, IsEnum, IsBoolean } from "class-validator";
import { Type } from "class-transformer";
import { AttributeClassUpdateManyWithoutEnvironmentsInput } from "./AttributeClassUpdateManyWithoutEnvironmentsInput";
import { EventClassUpdateManyWithoutEnvironmentsInput } from "./EventClassUpdateManyWithoutEnvironmentsInput";
import { PersonUpdateManyWithoutEnvironmentsInput } from "./PersonUpdateManyWithoutEnvironmentsInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { SurveyUpdateManyWithoutEnvironmentsInput } from "./SurveyUpdateManyWithoutEnvironmentsInput";
import { TagUpdateManyWithoutEnvironmentsInput } from "./TagUpdateManyWithoutEnvironmentsInput";
import { EnumEnvironmentType } from "./EnumEnvironmentType";
import { WebhookUpdateManyWithoutEnvironmentsInput } from "./WebhookUpdateManyWithoutEnvironmentsInput";

@InputType()
class EnvironmentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ApiKeyUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => ApiKeyUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => ApiKeyUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  apiKeys?: ApiKeyUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => AttributeClassUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => AttributeClassUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => AttributeClassUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  attributeClasses?: AttributeClassUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => EventClassUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => EventClassUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => EventClassUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  eventClasses?: EventClassUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => PersonUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => PersonUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => PersonUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  people?: PersonUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SurveyUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => SurveyUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => SurveyUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  surveys?: SurveyUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  tags?: TagUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    enum: EnumEnvironmentType,
  })
  @IsEnum(EnumEnvironmentType)
  @IsOptional()
  @Field(() => EnumEnvironmentType, {
    nullable: true,
  })
  type?: "production" | "development";

  @ApiProperty({
    required: false,
    type: () => WebhookUpdateManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => WebhookUpdateManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => WebhookUpdateManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  webhooks?: WebhookUpdateManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  widgetSetupCompleted?: boolean;
}

export { EnvironmentUpdateInput as EnvironmentUpdateInput };
