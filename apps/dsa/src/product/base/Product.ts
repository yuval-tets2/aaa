/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsBoolean,
  IsDate,
  ValidateNested,
  IsOptional,
  IsEnum,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { Environment } from "../../environment/base/Environment";
import { EnumProductPlacement } from "./EnumProductPlacement";
import { Team } from "../../team/base/Team";

@ObjectType()
class Product {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  brandColor!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  clickOutsideClose!: boolean;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  darkOverlay!: boolean;

  @ApiProperty({
    required: false,
    type: () => [Environment],
  })
  @ValidateNested()
  @Type(() => Environment)
  @IsOptional()
  environments?: Array<Environment>;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  formbricksSignature!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  highlightBorderColor!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    enum: EnumProductPlacement,
  })
  @IsEnum(EnumProductPlacement)
  @Field(() => EnumProductPlacement, {
    nullable: true,
  })
  placement?: "bottomLeft" | "bottomRight" | "topLeft" | "topRight" | "center";

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  recontactDays!: number;

  @ApiProperty({
    required: true,
    type: () => Team,
  })
  @ValidateNested()
  @Type(() => Team)
  team?: Team;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Product as Product };
