/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { IsBoolean, ValidateNested, IsOptional } from "class-validator";
import { ResponseNoteCreateNestedManyWithoutResponsesInput } from "./ResponseNoteCreateNestedManyWithoutResponsesInput";
import { Type } from "class-transformer";
import { PersonWhereUniqueInput } from "../../person/base/PersonWhereUniqueInput";
import { SurveyWhereUniqueInput } from "../../survey/base/SurveyWhereUniqueInput";
import { TagsOnResponseCreateNestedManyWithoutResponsesInput } from "./TagsOnResponseCreateNestedManyWithoutResponsesInput";

@InputType()
class ResponseCreateInput {
  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  data!: InputJsonValue;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  finished!: boolean;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  meta!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ResponseNoteCreateNestedManyWithoutResponsesInput,
  })
  @ValidateNested()
  @Type(() => ResponseNoteCreateNestedManyWithoutResponsesInput)
  @IsOptional()
  @Field(() => ResponseNoteCreateNestedManyWithoutResponsesInput, {
    nullable: true,
  })
  notes?: ResponseNoteCreateNestedManyWithoutResponsesInput;

  @ApiProperty({
    required: false,
    type: () => PersonWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PersonWhereUniqueInput)
  @IsOptional()
  @Field(() => PersonWhereUniqueInput, {
    nullable: true,
  })
  person?: PersonWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  personAttributes?: InputJsonValue;

  @ApiProperty({
    required: true,
    type: () => SurveyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SurveyWhereUniqueInput)
  @Field(() => SurveyWhereUniqueInput)
  survey!: SurveyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TagsOnResponseCreateNestedManyWithoutResponsesInput,
  })
  @ValidateNested()
  @Type(() => TagsOnResponseCreateNestedManyWithoutResponsesInput)
  @IsOptional()
  @Field(() => TagsOnResponseCreateNestedManyWithoutResponsesInput, {
    nullable: true,
  })
  tags?: TagsOnResponseCreateNestedManyWithoutResponsesInput;
}

export { ResponseCreateInput as ResponseCreateInput };
