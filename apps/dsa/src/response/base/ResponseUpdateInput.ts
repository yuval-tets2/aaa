/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "@app/custom-validators";
import { IsOptional, IsBoolean, ValidateNested } from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ResponseNoteUpdateManyWithoutResponsesInput } from "./ResponseNoteUpdateManyWithoutResponsesInput";
import { Type } from "class-transformer";
import { PersonWhereUniqueInput } from "../../person/base/PersonWhereUniqueInput";
import { SurveyWhereUniqueInput } from "../../survey/base/SurveyWhereUniqueInput";
import { TagsOnResponseUpdateManyWithoutResponsesInput } from "./TagsOnResponseUpdateManyWithoutResponsesInput";

@InputType()
class ResponseUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  data?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  finished?: boolean;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  meta?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ResponseNoteUpdateManyWithoutResponsesInput,
  })
  @ValidateNested()
  @Type(() => ResponseNoteUpdateManyWithoutResponsesInput)
  @IsOptional()
  @Field(() => ResponseNoteUpdateManyWithoutResponsesInput, {
    nullable: true,
  })
  notes?: ResponseNoteUpdateManyWithoutResponsesInput;

  @ApiProperty({
    required: false,
    type: () => PersonWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PersonWhereUniqueInput)
  @IsOptional()
  @Field(() => PersonWhereUniqueInput, {
    nullable: true,
  })
  person?: PersonWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  personAttributes?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => SurveyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SurveyWhereUniqueInput)
  @IsOptional()
  @Field(() => SurveyWhereUniqueInput, {
    nullable: true,
  })
  survey?: SurveyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TagsOnResponseUpdateManyWithoutResponsesInput,
  })
  @ValidateNested()
  @Type(() => TagsOnResponseUpdateManyWithoutResponsesInput)
  @IsOptional()
  @Field(() => TagsOnResponseUpdateManyWithoutResponsesInput, {
    nullable: true,
  })
  tags?: TagsOnResponseUpdateManyWithoutResponsesInput;
}

export { ResponseUpdateInput as ResponseUpdateInput };
