/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsBoolean,
  IsString,
  ValidateNested,
  IsOptional,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { ResponseNote } from "../../responseNote/base/ResponseNote";
import { Person } from "../../person/base/Person";
import { Survey } from "../../survey/base/Survey";
import { TagsOnResponse } from "../../tagsOnResponse/base/TagsOnResponse";

@ObjectType()
class Response {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  data!: JsonValue;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  finished!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  meta!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [ResponseNote],
  })
  @ValidateNested()
  @Type(() => ResponseNote)
  @IsOptional()
  notes?: Array<ResponseNote>;

  @ApiProperty({
    required: false,
    type: () => Person,
  })
  @ValidateNested()
  @Type(() => Person)
  @IsOptional()
  person?: Person | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  personAttributes!: JsonValue;

  @ApiProperty({
    required: true,
    type: () => Survey,
  })
  @ValidateNested()
  @Type(() => Survey)
  survey?: Survey;

  @ApiProperty({
    required: false,
    type: () => [TagsOnResponse],
  })
  @ValidateNested()
  @Type(() => TagsOnResponse)
  @IsOptional()
  tags?: Array<TagsOnResponse>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Response as Response };
