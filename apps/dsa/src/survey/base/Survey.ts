/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { SurveyAttributeFilter } from "../../surveyAttributeFilter/base/SurveyAttributeFilter";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsDate,
  IsEnum,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumSurveyDisplayOption } from "./EnumSurveyDisplayOption";
import { Display } from "../../display/base/Display";
import { Environment } from "../../environment/base/Environment";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Response } from "../../response/base/Response";
import { EnumSurveyStatus } from "./EnumSurveyStatus";
import { SurveyTrigger } from "../../surveyTrigger/base/SurveyTrigger";
import { EnumSurveyType } from "./EnumSurveyType";

@ObjectType()
class Survey {
  @ApiProperty({
    required: false,
    type: () => [SurveyAttributeFilter],
  })
  @ValidateNested()
  @Type(() => SurveyAttributeFilter)
  @IsOptional()
  attributeFilters?: Array<SurveyAttributeFilter>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autoClose!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autoComplete!: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  closeOnDate!: Date | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  delay!: number;

  @ApiProperty({
    required: true,
    enum: EnumSurveyDisplayOption,
  })
  @IsEnum(EnumSurveyDisplayOption)
  @Field(() => EnumSurveyDisplayOption, {
    nullable: true,
  })
  displayOption?: "displayOnce" | "displayMultiple" | "respondMultiple";

  @ApiProperty({
    required: false,
    type: () => [Display],
  })
  @ValidateNested()
  @Type(() => Display)
  @IsOptional()
  displays?: Array<Display>;

  @ApiProperty({
    required: true,
    type: () => Environment,
  })
  @ValidateNested()
  @Type(() => Environment)
  environment?: Environment;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  questions!: JsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  recontactDays!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  redirectUrl!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Response],
  })
  @ValidateNested()
  @Type(() => Response)
  @IsOptional()
  responses?: Array<Response>;

  @ApiProperty({
    required: true,
    enum: EnumSurveyStatus,
  })
  @IsEnum(EnumSurveyStatus)
  @Field(() => EnumSurveyStatus, {
    nullable: true,
  })
  status?: "draft" | "inProgress" | "paused" | "completed" | "archived";

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  surveyClosedMessage!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  thankYouCard!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [SurveyTrigger],
  })
  @ValidateNested()
  @Type(() => SurveyTrigger)
  @IsOptional()
  triggers?: Array<SurveyTrigger>;

  @ApiProperty({
    required: true,
    enum: EnumSurveyType,
  })
  @IsEnum(EnumSurveyType)
  @Field(() => EnumSurveyType, {
    nullable: true,
  })
  type?: "email" | "link" | "mobile" | "web";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Survey as Survey };
