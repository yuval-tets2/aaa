/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { InviteUpdateManyWithoutTeamsInput } from "./InviteUpdateManyWithoutTeamsInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { MembershipUpdateManyWithoutTeamsInput } from "./MembershipUpdateManyWithoutTeamsInput";
import { EnumTeamPlan } from "./EnumTeamPlan";
import { ProductUpdateManyWithoutTeamsInput } from "./ProductUpdateManyWithoutTeamsInput";

@InputType()
class TeamUpdateInput {
  @ApiProperty({
    required: false,
    type: () => InviteUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => InviteUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => InviteUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  invites?: InviteUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => MembershipUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => MembershipUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => MembershipUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  memberships?: MembershipUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    enum: EnumTeamPlan,
  })
  @IsEnum(EnumTeamPlan)
  @IsOptional()
  @Field(() => EnumTeamPlan, {
    nullable: true,
  })
  plan?: "free" | "pro";

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  products?: ProductUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  stripeCustomerId?: string | null;
}

export { TeamUpdateInput as TeamUpdateInput };
