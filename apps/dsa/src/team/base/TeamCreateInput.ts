/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { InviteCreateNestedManyWithoutTeamsInput } from "./InviteCreateNestedManyWithoutTeamsInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { MembershipCreateNestedManyWithoutTeamsInput } from "./MembershipCreateNestedManyWithoutTeamsInput";
import { EnumTeamPlan } from "./EnumTeamPlan";
import { ProductCreateNestedManyWithoutTeamsInput } from "./ProductCreateNestedManyWithoutTeamsInput";

@InputType()
class TeamCreateInput {
  @ApiProperty({
    required: false,
    type: () => InviteCreateNestedManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => InviteCreateNestedManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => InviteCreateNestedManyWithoutTeamsInput, {
    nullable: true,
  })
  invites?: InviteCreateNestedManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => MembershipCreateNestedManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => MembershipCreateNestedManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => MembershipCreateNestedManyWithoutTeamsInput, {
    nullable: true,
  })
  memberships?: MembershipCreateNestedManyWithoutTeamsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    enum: EnumTeamPlan,
  })
  @IsEnum(EnumTeamPlan)
  @Field(() => EnumTeamPlan)
  plan!: "free" | "pro";

  @ApiProperty({
    required: false,
    type: () => ProductCreateNestedManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => ProductCreateNestedManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => ProductCreateNestedManyWithoutTeamsInput, {
    nullable: true,
  })
  products?: ProductCreateNestedManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  stripeCustomerId?: string | null;
}

export { TeamCreateInput as TeamCreateInput };
