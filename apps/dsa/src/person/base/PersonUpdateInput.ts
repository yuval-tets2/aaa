/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttributeUpdateManyWithoutPeopleInput } from "./AttributeUpdateManyWithoutPeopleInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DisplayUpdateManyWithoutPeopleInput } from "./DisplayUpdateManyWithoutPeopleInput";
import { EnvironmentWhereUniqueInput } from "../../environment/base/EnvironmentWhereUniqueInput";
import { ResponseUpdateManyWithoutPeopleInput } from "./ResponseUpdateManyWithoutPeopleInput";
import { SessionUpdateManyWithoutPeopleInput } from "./SessionUpdateManyWithoutPeopleInput";

@InputType()
class PersonUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AttributeUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => AttributeUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => AttributeUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  attributes?: AttributeUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => DisplayUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => DisplayUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => DisplayUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  displays?: DisplayUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => EnvironmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EnvironmentWhereUniqueInput)
  @IsOptional()
  @Field(() => EnvironmentWhereUniqueInput, {
    nullable: true,
  })
  environment?: EnvironmentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ResponseUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => ResponseUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => ResponseUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  responses?: ResponseUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => SessionUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => SessionUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => SessionUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  sessions?: SessionUpdateManyWithoutPeopleInput;
}

export { PersonUpdateInput as PersonUpdateInput };
